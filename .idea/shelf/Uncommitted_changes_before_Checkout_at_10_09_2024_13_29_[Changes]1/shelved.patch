Index: djangoProject1/users/models.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from django.contrib.auth.models import AbstractBaseUser, BaseUserManager, PermissionsMixin\r\nfrom django.db import models\r\nfrom mptt.models import MPTTModel, TreeForeignKey\r\n\r\nclass UserManager(BaseUserManager):\r\n    def create_user(self, email, username, password=None, **extra_fields):\r\n        if not email:\r\n            raise ValueError('The Email field must be set')\r\n        email = self.normalize_email(email)\r\n        user = self.model(email=email, username=username, **extra_fields)\r\n        user.set_password(password)\r\n        user.save(using=self._db)\r\n        return user\r\n\r\n    def create_superuser(self, email, username, password=None, **extra_fields):\r\n        extra_fields.setdefault('is_staff', True)\r\n        extra_fields.setdefault('is_superuser', True)\r\n\r\n        return self.create_user(email, username, password, **extra_fields)\r\n\r\nclass User(AbstractBaseUser):\r\n    email = models.EmailField(unique=True)\r\n    username = models.CharField(max_length=255)\r\n    is_active = models.BooleanField(default=True)\r\n    is_staff = models.BooleanField(default=False)\r\n\r\n    objects = UserManager()\r\n\r\n    USERNAME_FIELD = 'email'\r\n    REQUIRED_FIELDS = ['username']\r\n\r\n    def __str__(self):\r\n        return self.email\r\n\r\nclass Image(models.Model):\r\n    title = models.CharField(max_length=100, blank=True)\r\n    img = models.ImageField(upload_to='images/')\r\n    uploaded_at = models.DateTimeField(auto_now_add=True)\r\n\r\n    def __str__(self):\r\n        return self.title\r\n\r\nclass Category(MPTTModel):\r\n    name = models.CharField(max_length=100)\r\n    parent = TreeForeignKey('self', on_delete=models.CASCADE, null=True, blank=True, related_name='children')\r\n\r\n    class MPTTMeta:\r\n        order_insertion_by = ['name']\r\n\r\n    def __str__(self):\r\n        return self.name\r\nclass Product(models.Model):\r\n    name = models.CharField(max_length=255)\r\n    img = models.ImageField(upload_to='products/')\r\n    price = models.DecimalField(max_digits=10, decimal_places=2)\r\n    category = models.ForeignKey(Category, on_delete=models.CASCADE, related_name='products')\r\n\r\n    def __str__(self):\r\n        return self.name
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/djangoProject1/users/models.py b/djangoProject1/users/models.py
--- a/djangoProject1/users/models.py	
+++ b/djangoProject1/users/models.py	
@@ -1,4 +1,4 @@
-from django.contrib.auth.models import AbstractBaseUser, BaseUserManager, PermissionsMixin
+from django.contrib.auth.models import AbstractBaseUser, BaseUserManager
 from django.db import models
 from mptt.models import MPTTModel, TreeForeignKey
 
@@ -26,34 +26,46 @@
 
     objects = UserManager()
 
-    USERNAME_FIELD = 'email'
-    REQUIRED_FIELDS = ['username']
+    EMAIL_FIELD = 'email'
+    REQUIRED_FIELDS = ['email']
 
     def __str__(self):
         return self.email
 
 class Image(models.Model):
     title = models.CharField(max_length=100, blank=True)
-    img = models.ImageField(upload_to='images/')
+    image = models.ImageField(upload_to='images/')
     uploaded_at = models.DateTimeField(auto_now_add=True)
 
     def __str__(self):
         return self.title
 
 class Category(MPTTModel):
-    name = models.CharField(max_length=100)
+    name = models.CharField(max_length=255)
+    image = models.ImageField(upload_to='category/images/')
     parent = TreeForeignKey('self', on_delete=models.CASCADE, null=True, blank=True, related_name='children')
-
     class MPTTMeta:
         order_insertion_by = ['name']
 
     def __str__(self):
         return self.name
+class Brand(models.Model):
+    id = models.AutoField(primary_key=True)
+    name = models.CharField(max_length=255)
+
+    def __str__(self):
+        return self.name
+
 class Product(models.Model):
+    id = models.AutoField(primary_key=True)
     name = models.CharField(max_length=255)
-    img = models.ImageField(upload_to='products/')
     price = models.DecimalField(max_digits=10, decimal_places=2)
-    category = models.ForeignKey(Category, on_delete=models.CASCADE, related_name='products')
+    image = models.ImageField(upload_to="products/images/")
+    description = models.TextField(blank=True, null=True)
+    category = models.ForeignKey(Category, related_name='products', on_delete=models.CASCADE)
+    brand = models.ForeignKey(Brand, related_name='products', on_delete=models.CASCADE)
+
 
     def __str__(self):
-        return self.name
\ No newline at end of file
+        return self.name
+
