Index: djangoProject1/users/models.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from django.contrib.auth.models import AbstractBaseUser, BaseUserManager, PermissionsMixin\r\nfrom django.db import models\r\nfrom mptt.models import MPTTModel, TreeForeignKey\r\n\r\nclass UserManager(BaseUserManager):\r\n    def create_user(self, email, username, password=None, **extra_fields):\r\n        if not email:\r\n            raise ValueError('The Email field must be set')\r\n        email = self.normalize_email(email)\r\n        user = self.model(email=email, username=username, **extra_fields)\r\n        user.set_password(password)\r\n        user.save(using=self._db)\r\n        return user\r\n\r\n    def create_superuser(self, email, username, password=None, **extra_fields):\r\n        extra_fields.setdefault('is_staff', True)\r\n        extra_fields.setdefault('is_superuser', True)\r\n\r\n        return self.create_user(email, username, password, **extra_fields)\r\n\r\nclass User(AbstractBaseUser):\r\n    email = models.EmailField(unique=True)\r\n    username = models.CharField(max_length=255)\r\n    is_active = models.BooleanField(default=True)\r\n    is_staff = models.BooleanField(default=False)\r\n\r\n    objects = UserManager()\r\n\r\n    USERNAME_FIELD = 'email'\r\n    REQUIRED_FIELDS = ['username']\r\n\r\n    def __str__(self):\r\n        return self.email\r\n\r\nclass Image(models.Model):\r\n    title = models.CharField(max_length=100, blank=True)\r\n    img = models.ImageField(upload_to='images/')\r\n    uploaded_at = models.DateTimeField(auto_now_add=True)\r\n\r\n    def __str__(self):\r\n        return self.title\r\n\r\nclass Category(MPTTModel):\r\n    name = models.CharField(max_length=100)\r\n    parent = TreeForeignKey('self', on_delete=models.CASCADE, null=True, blank=True, related_name='children')\r\n\r\n    class MPTTMeta:\r\n        order_insertion_by = ['name']\r\n\r\n    def __str__(self):\r\n        return self.name\r\nclass Product(models.Model):\r\n    name = models.CharField(max_length=255)\r\n    img = models.ImageField(upload_to='products/')\r\n    price = models.DecimalField(max_digits=10, decimal_places=2)\r\n    category = models.ForeignKey(Category, on_delete=models.CASCADE, related_name='products')\r\n\r\n    def __str__(self):\r\n        return self.name
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/djangoProject1/users/models.py b/djangoProject1/users/models.py
--- a/djangoProject1/users/models.py	(revision 8be95109b33769586ebb8bbe529cb14e34b33561)
+++ b/djangoProject1/users/models.py	(date 1726069467761)
@@ -41,7 +41,7 @@
         return self.title
 
 class Category(MPTTModel):
-    name = models.CharField(max_length=100)
+    name = models.CharField(max_length=255)
     parent = TreeForeignKey('self', on_delete=models.CASCADE, null=True, blank=True, related_name='children')
 
     class MPTTMeta:
Index: djangoProject1/users/serializers.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from rest_framework import serializers\r\nfrom django.contrib.auth.models import User\r\nfrom .models import Category\r\n\r\nclass CategorySerializer(serializers.ModelSerializer):\r\n    class Meta:\r\n        model = Category\r\n        fields = ['id', 'name', 'parent', 'level', 'lft', 'rght', 'tree_id']\r\n\r\n\r\nclass UserSerializer(serializers.ModelSerializer):\r\n    class Meta:\r\n        model = User\r\n        fields = ('id', 'email', 'password', 'username')  # Добавьте другие необходимые поля\r\n        extra_kwargs = {\r\n            'password': {'write_only': True}\r\n        }\r\n\r\n    def create(self, validated_data):\r\n        user = User.objects.create_user(**validated_data)\r\n        return user\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/djangoProject1/users/serializers.py b/djangoProject1/users/serializers.py
--- a/djangoProject1/users/serializers.py	(revision 8be95109b33769586ebb8bbe529cb14e34b33561)
+++ b/djangoProject1/users/serializers.py	(date 1726069734855)
@@ -1,11 +1,11 @@
 from rest_framework import serializers
 from django.contrib.auth.models import User
-from .models import Category
+from .models import *
 
 class CategorySerializer(serializers.ModelSerializer):
     class Meta:
         model = Category
-        fields = ['id', 'name', 'parent', 'level', 'lft', 'rght', 'tree_id']
+        fields = ['id', 'name', 'parent', 'children']
 
 
 class UserSerializer(serializers.ModelSerializer):
